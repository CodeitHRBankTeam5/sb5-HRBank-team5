-- H2용 스키마
-- H2는 CREATE DATABASE 구문을 지원하지 않습니다.

DROP TABLE IF EXISTS departments CASCADE;
DROP TABLE IF EXISTS files CASCADE;
DROP TABLE IF EXISTS employees CASCADE;
DROP TABLE IF EXISTS change_logs CASCADE;
DROP TABLE IF EXISTS change_log_diffs CASCADE;
DROP TABLE IF EXISTS backups CASCADE;

------------------------------------------------------
/* 부서 departments */
CREATE TABLE departments
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name             VARCHAR(50) NOT NULL UNIQUE,
    description      VARCHAR(255) NOT NULL,
    established_date DATE NOT NULL
);

------------------------------------------------------
/* 파일 files */
CREATE TABLE files
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    file_name    VARCHAR(255) NOT NULL,
    content_type VARCHAR(100) NOT NULL,
    size         BIGINT NOT NULL
);

------------------------------------------------------
/* 직원 employees */
CREATE TABLE employees
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name             VARCHAR(50)  NOT NULL,
    email            VARCHAR(100) NOT NULL UNIQUE,
    employee_number  VARCHAR(50)  NOT NULL UNIQUE,
    department_id    BIGINT       NOT NULL,
    position         VARCHAR(50)  NOT NULL,
    hire_date        DATE         NOT NULL,
    status           VARCHAR(50)  NOT NULL,
    profile_image_id BIGINT
);

ALTER TABLE employees
    ADD CONSTRAINT employees_departments_id_fk
        FOREIGN KEY (department_id) REFERENCES departments;

ALTER TABLE employees
    ADD CONSTRAINT employees_files_id_fk
        FOREIGN KEY (profile_image_id) REFERENCES files ON DELETE SET NULL;

------------------------------------------------------
/* 직원 정보 수정 이력 change_logs */
CREATE TABLE change_logs
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type            VARCHAR(50) NOT NULL,
    employee_number VARCHAR(50) NOT NULL,
    memo            VARCHAR(1000),
    ip_address      VARCHAR(50) NOT NULL,
    at              TIMESTAMP NOT NULL
);

ALTER TABLE change_logs
    ADD CONSTRAINT chk_change_logs_type
        CHECK (type IN ('CREATED', 'UPDATED', 'DELETED'));

------------------------------------------------------
/* 직원 정보 수정 상세 이력 change_log_diffs */
CREATE TABLE change_log_diffs
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    log_id        BIGINT NOT NULL,
    property_name VARCHAR(50)  NOT NULL,
    before        VARCHAR(100),
    after         VARCHAR(100)
);

ALTER TABLE change_log_diffs
    ADD CONSTRAINT change_log_diffs_change_logs_id_fk
        FOREIGN KEY (log_id) REFERENCES change_logs (id) ON DELETE CASCADE;

------------------------------------------------------
/* 데이터 백업 backups */
CREATE TABLE backups
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    worker     VARCHAR(50) NOT NULL,
    started_at TIMESTAMP NOT NULL,
    ended_at   TIMESTAMP,
    status     VARCHAR(50) NOT NULL,
    file_id    BIGINT
);

ALTER TABLE backups
    ADD CONSTRAINT backups_files_id_fk
        FOREIGN KEY (file_id) REFERENCES files;
